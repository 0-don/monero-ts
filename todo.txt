update js from java/c++: createTx(), createTxs(), relayTx(), relayTxs(), send(), sendSplit(), get is/has/in, isDoubleSpend -> isDoubleSpendSeen, startSyncing(), stopSyncing(), coinbaseTx->minerTx, request copying from ~jni93, request -> query, height methods + ordering
port incoming transfer duplicate resolution from java/cpp
port ground truth test from java
port pool relay tests from java TestMoneroWalletCommon.java
some tests are both notifications and relays; flatten and use config booleans like java?
MoneroRpc -> MoneroRpcConnection
getBlocksByRange() end should be exclusive

readme: description consistent with other libraries, reference api

model rct_signatures and rct_prunable
mms
what happens if sweep_all is not given account_index.  if it sweeps wallet, replace sweepWallet() impl
bundle up dependencies into a single monero.js
test filtering on hasDestinations
MoneroTxTestConfig extends MoneroTxFilter
MoneroTxConfig setIncludeVouts(), getIncludeVouts()
MoneroTxConfig isCompatible(MoneroWalletTx)
wallet.getTxById() for convenience?
commonTxSets
monero.common package which is where MoneroUtils, MoneroException go
sendSingle() : MoneroTx, send() : List<MoneroTx> ?
send priority has no default, must pick one
wallet.close() is common?
MoneroSyncResult received_money -> received_amount for consistency
don't differntiate in spec uint vs long, BigInteger?
class diagram query txs, transfers, vouts
checkTxProof(signature, ...)?
monero daemon connection span model
rct sig prunable model
consider how api should generate subaddresses client side
sweepDust()

multisig
pruning

one call per get/set bandwidth limits?
daemon.getBlocksById(), default implementations
daemon test failed txs more
wallet test coinbase txs
sweep subaddresses test
test that note is set if specified in send config
set subaddress getUnspentOutputCount() with outputs assigned
validate all input parameters to api
test every block of the chain
not directly testing sweepUnlocked()
daemon binary tests
daemon notification test needs to test tx merging
multisig
pruning
common tx tests need cleanup
support and test unlock time unlocks
merge asserts type
how to handle 'confirmations' block height to add the tx to the chain if unconfirmed? corallary of unlock time?
handle excess undefineds and enable deepEqual() in testWalletTxCopy()
way to throttle rpc requests with agent instead of throttle-request to preserve stacktrace?
send to multiple, suggested_confirmation_threshold outgoing payment 6 but incoming payments 1; large discrepency
remove text-encoding dependency
test notifications hardwired to account 0 which gets emptied by reset tests
test all tx fields in daemon, update tests to be like wallet
test json serialization / deserialization specifically, stringifying in between so cannot be any live objects
support vout filter in tx filter?
undefined amounts instead of 0 for rct amounts
block comments in models
support setting daemon log level

JS now has native BigInt class which could be used instead of current BigInteger
switch to jest?
csv export of types
time profiling
mock response test framework
refactor copying to not be downward of a tree rooted at tx but instead correct per each part of a graph
add typescript?

BIG PICTURE
make javascript feature complete, including multisig
report rpc issues
fix transfers bug #4500 in wallet rpc
data model outline
mymonero javascript wallet
local wallet / refactor wallet2.h

port javascript to java
implement java jni adapter
integrate with bisq
port javascript to go & implement jni binding to integrate with openbazaar

LOCAL WALLET / BROWSER
build process to not read mymonero-core-js build and contrib to browser build
update on save B-)
in wallet implementation: "prepend the last 3 blocks, should be enough to guard against a block or two's reorg" pull_and_parse_next_blocks
binary_blocks_to_json property_tree conversion throws memory exception if too big
split BooleanSet into new project
package asm for browser build under different directory (MyMoneroCoreBridge.js:740)

RPC
-1: Failed to get the right transaction from daemon
-4: failed to get output distribution on send rests (wallet rpc transfer, transfer_split, sweep, sweep_single, etc)
-4: Change address is not ours on testSweepUnlocked();
why is subaddr_indices list of map?
subaddresses occluded by outgoing counterparts when sent from/to same account (#4500)
key proof indicates no funds received despite known incoming transfer from/to same account
not enough money right after opening wallet, pretty much every other run
outgoing transfers always return subaddress index 0 (#5171)
duplicate outgoing transfers returned for different subaddress indices, way to include subaddress indices?

add relayed to daemon rpc get_transactions, wallet rpc get_transfers, else must use get_transaction_pool (#5137)
add output_indices to get_blocks_by_height.bin (#5127)
wallet rpc sweep_single documentation not correct; contradicts example
daemon rpc supports cors wildcard character (#5172)
unconfirmed tx missing destinations even though known by wallet
send from/to same account, after first confirmation outgoing tx amount is 0 but has payments with amts, so discrepency
show_transfers returns unconfirmed outputs
introduce way to identify change output from blockchain? that solves unknown sent amt issue
identify one call per acount/subaddress and support "all" flag
/get_transactions returns duplicate data per transaction
daemon get_txs prune documentation missing
document alt chain `block_hashes` and `main_chain_parent_block`
each call to `open_wallet` toggles whether or not pending transfers return (#5106)
transfer with do_not_relay then relay_tx issue (#5107)
ability to create new wallet which randomly generates seed?