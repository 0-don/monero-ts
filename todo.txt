is tx pool key images redundant because that info is embedded in tx vins?
daemon.getTxs() test getting tx pool tx by id
remove extra fields: outputIndices into vouts, block height, timestamp, confirmation count into block instead of tx, block txIds into block's txs, subaddress index into account index only?

todos throughout code
object model
copy() should call new self() which calls toJson() which is unpacked

daemon.getBlocksById(), default implementations
daemon test getting coinbase txs by id

wallet test coinbase txs
get_transfers pool does not actually indicate it's relayed; return undefined?
sweep subaddresses test
test that note is set if specified in send config
set subaddress getUnspentOutputCount() with outputs assigned
validate all input parameters to api

test every block of the chain
not directly testing sweepUnlocked()
common MoneroModel which can be initialized from and export state
daemon binary tests
daemon notification test needs to test tx merging
multisig
pruning
common tx tests need cleanup
support and test unlock time unlocks
merge asserts type
how to handle 'confirmations' block height to add the tx to the chain if unconfirmed? corallary of unlock time?
handle excess undefineds and enable deepEqual() in testWalletTxCopy()
way to throttle rpc requests with agent instead of throttle-request to preserve stacktrace?
send to multiple, suggested_confirmation_threshold outgoing payment 6 but incoming payments 1; large discrepency
remove text-encoding dependency
test notifications hardwired to account 0 which gets emptied by reset tests
test all tx fields in daemon, update tests to be like wallet
test json serialization / deserialization specifically, stringifying in between so cannot be any live objects
support vout filter in tx filter?
undefined amounts instead of 0 for rct amounts
MoneroBan includes redundant info with MoneroPeer
block comments in models
support setting daemon log level

JS now has native BigInt class which could be used instead of current BigInteger
switch to jest?
csv export of types
time profiling
mock response test framework
refactor copying to not be downward of a tree rooted at tx but instead correct per each part of a graph
add typescript?

BIG PICTURE
make javascript feature complete, including multisig
report rpc issues
fix transfers bug #4500 in wallet rpc
data model outline
mymonero javascript wallet
local wallet / refactor wallet2.h

port javascript to java
implement java jni adapter
integrate with bisq
port javascript to go & implement jni binding to integrate with openbazaar

LOCAL WALLET / BROWSER
build process to not read mymonero-core-js build and contrib to browser build
update on save B-)
in wallet implementation: "prepend the last 3 blocks, should be enough to guard against a block or two's reorg" pull_and_parse_next_blocks
binary_blocks_to_json property_tree conversion throws memory exception if too big
split BooleanSet into new project
package asm for browser build under different directory (MyMoneroCoreBridge.js:740)

RPC
add output_indices to get_blocks_by_height.bin (#5127)
get_transfers can return all subaddresses (#5109)
get_balance should return used or get_address should return balances for RPC optimization
wallet rpc sweep_single documentation not correct; contradicts example
support cors wildcard character
update #4500 with latest notes
fix #4500 subaddresses occluded by outgoing counterparts when sent from/to same account
unconfirmed tx missing destinations even though known by wallet
send from/to same account, after first confirmation outgoing tx amount is 0 but has payments with amts, so discrepency
show_transfers returns unconfirmed outputs
duplicate outgoing transfers returned for different subaddress indices, way to include subaddress indices?
introduce way to identify change output from blockchain? that solves unknown sent amt issue
identify one call per acount/subaddress and support "all" flag
/get_transactions returns duplicate data per transaction
daemon get_txs prune documentation missing
document alt chain `block_hashes` and `main_chain_parent_block`
each call to `open_wallet` toggles whether or not pending transfers return (#5106)
transfer with do_not_relay then relay_tx issue (#5107)
get_balance